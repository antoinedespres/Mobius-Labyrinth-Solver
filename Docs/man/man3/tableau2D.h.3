.TH "C:/PJ_SDA/tableau2D.h" 3 "Vendredi 3 Janvier 2020" "Version sp5_03.01.2020" "SDA 2019-20 Ruban de M√∂bius" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/PJ_SDA/tableau2D.h \- Composant tableau √† 2 dimensions Structures de donn√©es et algorithmes\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'item\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBTab2\fP"
.br
.in -1c
.SS "Fonctions"

.in +1c
.ti -1c
.RI "void \fBinitialiser\fP (int nbL, int nbC, \fBTab2\fP &t)"
.br
.RI "Initialise un tableau 2D\&. "
.ti -1c
.RI "void \fBwrite\fP (\fBItem\fP it, int l, int c, \fBTab2\fP &t)"
.br
.RI "Remplir une case du tableau avec un Item\&. "
.ti -1c
.RI "\fBItem\fP * \fBget\fP (\fBTab2\fP &t, int l, int c)"
.br
.RI "Obtenir l'Item stock√© dans une case du tableau\&. "
.ti -1c
.RI "const \fBItem\fP \fBread\fP (const \fBTab2\fP &t, int l, int c)"
.br
.RI "Lit une case et retourne ses coordonn√©es si elle a bien √©t√© lue\&. "
.ti -1c
.RI "void \fBafficher\fP (const \fBTab2\fP &t)"
.br
.RI "Affiche un tableau 2D et son contenu initialis√© "
.ti -1c
.RI "void \fBdetruire\fP (\fBTab2\fP &t)"
.br
.RI "D√©salloue et rend NULL un tableau 2D\&. "
.in -1c
.SH "Description d√©taill√©e"
.PP 
Composant tableau √† 2 dimensions Structures de donn√©es et algorithmes\&. 

Projet Despr√©sGr109NougaretGr109 
.PP
\fBAuteur\fP
.RS 4
Antoine Despr√©s, Anicet Nougaret 
.RE
.PP
\fBVersion\fP
.RS 4
1 06/01/20 
.RE
.PP

.SH "Documentation des fonctions"
.PP 
.SS "void afficher (const \fBTab2\fP & t)"

.PP
Affiche un tableau 2D et son contenu initialis√© 
.PP
\fBParam√®tres\fP
.RS 4
\fIt\fP Tableau 2D √† afficher
.RE
.PP
Affiche un tableau 2D et son contenu initialis√©
.PP
\fBParam√®tres\fP
.RS 4
\fIt\fP Tableau 2D ‡ afficher 
.RE
.PP

.SS "void detruire (\fBTab2\fP & t)"

.PP
D√©salloue et rend NULL un tableau 2D\&. 
.PP
\fBParam√®tres\fP
.RS 4
\fI[in-out]\fP t Tableau 2D √† d√©sallouer
.RE
.PP
D√©salloue et rend NULL un tableau 2D\&.
.PP
\fBParam√®tres\fP
.RS 4
\fI[in-out]\fP t Tableau 2D ‡ dÈsallouer 
.RE
.PP

.SS "\fBItem\fP* get (\fBTab2\fP & t, int l, int c)"

.PP
Obtenir l'Item stock√© dans une case du tableau\&. 
.PP
\fBParam√®tres\fP
.RS 4
\fIt\fP Tableau 2D √† lire 
.br
\fIl\fP N¬∞ de ligne de l'emplacement de la case √† lire 
.br
\fIc\fP N¬∞ de colonne de l'emplacement de la case √† lire 
.RE
.PP
\fBRenvoie\fP
.RS 4
Item situ√© dans la case sp√©cifi√©e 
.RE
.PP
\fBPr√©condition\fP
.RS 4
N¬∞ de Ligne et de colonne positifs et compris dans le tableau\&. 
.PP
\fBCase\fP sp√©cifi√©e non vide
.RE
.PP
Obtenir l'Item stock√© dans une case du tableau\&.
.PP
\fBParam√®tres\fP
.RS 4
\fIt\fP Tableau 2D ‡ lire 
.br
\fIl\fP N∞ de ligne de l'emplacement de la case ‡ lire 
.br
\fIc\fP N∞ de colonne de l'emplacement de la case ‡ lire 
.RE
.PP
\fBRenvoie\fP
.RS 4
Item situÈ dans la case spÈcifiÈe 
.RE
.PP
\fBPr√©condition\fP
.RS 4
N∞ de Ligne et de colonne positifs et compris dans le tableau\&. 
.PP
\fBCase\fP spÈcifiÈe non vide 
.RE
.PP

.SS "void initialiser (int nbL, int nbC, \fBTab2\fP & t)"

.PP
Initialise un tableau 2D\&. 
.PP
\fBParam√®tres\fP
.RS 4
\fInbL\fP Nombre de lignes du tableau 
.br
\fInbC\fP Nombre de colonnes du tableau 
.br
\fIt\fP Tableau 2D √† initialiser
.br
\fInbL\fP Nombre de lignes du tableau 
.br
\fInbC\fP Nombre de colonnes du tableau 
.br
\fIt\fP Tableau 2D ‡ initialiser 
.RE
.PP

.SS "const \fBItem\fP read (const \fBTab2\fP & t, int l, int c)"

.PP
Lit une case et retourne ses coordonn√©es si elle a bien √©t√© lue\&. 
.PP
\fBParam√®tres\fP
.RS 4
\fIt\fP Le tableau 
.br
\fIl\fP Num√©ro de ligne de la case 
.br
\fIc\fP Num√©ro de colonne de la case 
.RE
.PP
\fBRenvoie\fP
.RS 4
les coordonn√©es de la case 
.RE
.PP
\fBPr√©condition\fP
.RS 4
N¬∞ de ligne et de colonne tous deux sup√©rieurs √† 0 
.PP
la case a √©t√© marqu√©e comme used
.RE
.PP
Lit une case et retourne ses coordonn√©es si elle a bien √©t√© lue\&.
.PP
\fBParam√®tres\fP
.RS 4
\fIt\fP Le tableau 
.br
\fIl\fP NumÈro de ligne de la case 
.br
\fIc\fP NumÈro de colonne de la case 
.RE
.PP
\fBRenvoie\fP
.RS 4
les coordonnÈes de la case 
.RE
.PP
\fBPr√©condition\fP
.RS 4
N∞ de ligne et de colonne tous deux supÈrieurs ‡ 0 
.PP
la case a ÈtÈ marquÈe comme used 
.RE
.PP

.SS "void write (\fBItem\fP it, int l, int c, \fBTab2\fP & t)"

.PP
Remplir une case du tableau avec un Item\&. 
.PP
\fBParam√®tres\fP
.RS 4
\fIit\fP Item √† mettre dans la case 
.br
\fIl\fP N¬∞ de ligne de l'emplacement de la case √† remplir 
.br
\fIc\fP N¬∞ de colonne de l'emplacement de la case √† remplir 
.br
\fIt\fP Tableau 2D √† √©crire 
.RE
.PP
\fBPr√©condition\fP
.RS 4
N¬∞ de Ligne et de colonne positifs et compris dans le tableau\&.
.RE
.PP
\fBParam√®tres\fP
.RS 4
\fIit\fP Item ‡ mettre dans la case 
.br
\fIl\fP N∞ de ligne de l'emplacement de la case ‡ remplir 
.br
\fIc\fP N∞ de colonne de l'emplacement de la case ‡ remplir 
.br
\fIt\fP Tableau 2D ‡ Ècrire 
.RE
.PP
\fBPr√©condition\fP
.RS 4
N∞ de Ligne et de colonne positifs et compris dans le tableau\&. 
.RE
.PP

.SH "Auteur"
.PP 
G√©n√©r√© automatiquement par Doxygen pour SDA 2019-20 Ruban de M√∂bius √† partir du code source\&.
